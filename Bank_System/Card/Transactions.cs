namespace Bank_System;

public class Transaction
{
    // –í—Ä–µ–º—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ 
    // –°—É–º–º–∞
    // –ö–∞—Ä—Ç–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª—è
    // –ò–º—è –§–∞–º–∏–ª–∏—è ? - –µ—Å–ª–∏ –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—É —Å–≤–æ–µ–≥–æ –±–∞–Ω–∫–∞ —Ç–æ –µ—Å—Ç—å - –µ—Å–ª–∏ –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—É –¥—Ä—É–≥–æ–≥–æ –±–∞–Ω–∫–∞ –Ω–µ—Ç—ÉüôÇ 
    // –í–∞–ª—é—Ç–∞ - –µ—Å–ª–∏ –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ –¥—Ä—É–≥—É—é –≤–∞–ª—é—Ç–Ω—É—é –∫–∞—Ä—Ç—É –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—É—Ä—Å
    public DateTime TransactionTime { get; private set; }
    public decimal Amount { get; private set; }
    public Card RecipientCard { get; private set; }
    public Card SenderCard { get; private set; }
    public string RecipientName { get; private set; } // –Ω–µ –Ω–∞—à–∏ –∏–Ω–∏—Ü–∏–∞–ª—ã (–ø–æ–ª—É—á–∞—Ç–µ–ª—è)
    public decimal? ExchangeRate { get; private set; } // –∫—É—Ä—Å –æ–±–º–µ–Ω–∞ –≤–∞–ª—é—Ç (–µ—Å–ª–∏ –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫—Ä–∞—Ç—ã —Ä–∞–∑–Ω—ã—Ö –≤–∞–ª—é—Ç)
    public string SenderInitials { get; private set; } // –Ω–∞—à–∏ –∏–Ω–∏—Ü–∏–∞–ª—ã

    public Transaction(Card senderCard, decimal amount, Card recipientCard, string senderInitials, decimal? exchangeRate = null, string recipientName = null)
    {
        if (string.IsNullOrWhiteSpace(senderInitials)) throw new ArgumentException("Sender initials are required.", nameof(senderInitials));

        TransactionTime = DateTime.Now;
        Amount = amount;
        SenderCard = senderCard;
        RecipientCard = recipientCard;
        ExchangeRate = exchangeRate;
        RecipientName = recipientName;
        SenderInitials = senderInitials;
    }

    public void DisplayTransactionDetails()
    {
        Console.WriteLine($"–í—Ä–µ–º—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {TransactionTime}");
        Console.WriteLine($"–°—É–º–º–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {Amount:C}");
        Console.WriteLine($"–ù–æ–º–µ—Ä –∫–∞—Ç—Ä—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è: {SenderCard.CardNumber}");
        Console.WriteLine($"–ò–Ω–∏—Ü–∏–∞–ª—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è: {SenderInitials}");
        Console.WriteLine($"–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã –ø–æ–ª—É—á–∞—Ç–µ–ª—è: {RecipientCard.CardNumber}");
        if (RecipientName != null)
        {
            Console.WriteLine($"–ò–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è: {RecipientName}");
        }

        if (SenderCard.Currency == RecipientCard.Currency)
        {
            Console.WriteLine($"–ü–µ—Ä–µ–≤–æ–¥ –≤ –≤–∞–ª—é—Ç–µ: {SenderCard.Currency}");
        }
        else
        {
            Console.WriteLine($"–í–∞–ª—é—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è: {SenderCard.Currency}");
            Console.WriteLine($"–í–∞–ª—é—Ç–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª—è: {RecipientCard.Currency}");
        }
        if (ExchangeRate.HasValue)
        {
            Console.WriteLine($"Exchange Rate: {ExchangeRate.Value}");
        }
    }
}